/**
* Done by:
 * Student Name: Yaroslav Ivanchenko
 * Student Group: 123
 * Lab 2.1
 */

#include <iostream>

int main() {
    // Робота з двовимірним масивом типу float розміром 4x5

    float floatArray[4][5] = {
        {1.0, -2.0, 3.0, -4.0, 5.0},
        {-1.5, 2.5, -3.5, 4.5, -5.5},
        {0.0, -1.0, 2.0, -3.0, 4.0},
        {5.5, -6.5, 7.5, -8.5, 9.5}
    };

    // Масив для зберігання сум від’ємних елементів кожного рядка
    float sumNegative[4] = {0.0, 0.0, 0.0, 0.0};

    // Обчислення сум від’ємних елементів для кожного рядка
    for(int i = 0; i < 4; i++) { // Проходження по кожному рядку
        for(int j = 0; j < 5; j++) { // Проходження по кожному елементу рядка
            if(floatArray[i][j] < 0) { // Перевірка, чи елемент від’ємний
                sumNegative[i] += floatArray[i][j]; // Додавання до суми
            }
        }
    }

    std::cout << "Суми від'ємних елементів кожного рядка float масиву:" << std::endl;
    for(int i = 0; i < 4; i++) {
        std::cout << "Рядок " << (i + 1) << ": " << sumNegative[i] << std::endl;
    }

    // Робота з двовимірним масивом типу int розміром 5x4

    int intArray[5][4] = {
        {10, 20, 30, 40},
        {15, 25, 35, 45},
        {5, 55, 65, 75},
        {60, 70, 80, 90},
        {100, 200, 300, 400}
    };

    // Масив для зберігання максимальних елементів кожного рядка
    int maxInRow[5] = {0, 0, 0, 0, 0};

    // Знаходження максимальних елементів для кожного рядка
    for(int i = 0; i < 5; i++) { // Проходження по кожному рядку
        int max = intArray[i][0]; // Припускаємо, що перший елемент максимальний
        for(int j = 1; j < 4; j++) { // Проходження по решті елементів рядка
            if(intArray[i][j] > max) { // Перевірка, чи поточний елемент більший за max
                max = intArray[i][j]; // Оновлення max
            }
        }
        maxInRow[i] = max; // Збереження максимального значення
    }

    std::cout << "\nМаксимальні елементи кожного рядка int масиву: " << std::endl;
    for(int i = 0; i < 5; i++) {
        std::cout << "Рядок " << (i + 1) << ": " << maxInRow[i] << std::endl;
    }
    return 0;
}